import com.diffplug.spotless.LineEnding

plugins {
  id "java"
  id "org.jetbrains.kotlin.jvm" version "1.3.41"
  id "com.diffplug.gradle.spotless" version "3.23.1"
}

apply plugin: "kotlin-kapt"
apply plugin: "idea"

group 'com.ch629.kotlinbuilder'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  implementation 'com.squareup:kotlinpoet:1.3.0'

  testCompile "junit:junit:$junitVersion"
  testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spekVersion"
  testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spekVersion"
  testImplementation "org.amshove.kluent:kluent:$kluentVersion"

  compile project(":processor")
  kapt project(":processor")
}

test {
  useJUnitPlatform {
    includeEngines "spek2"
  }
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

spotless {
  format "misc", {
    target "**/*.gradle", "**/*.md", "**/.gitignore"

    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
    lineEndings = LineEnding.UNIX
  }

  kotlin {
    target "src/**/*.kt"
    ktlint().userData(['indent_size': '2'])
    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
    lineEndings = LineEnding.UNIX
  }

  java {
    googleJavaFormat()
    removeUnusedImports()
    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
    lineEndings = LineEnding.UNIX
  }
}

idea {
  module {
    sourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
    generatedSourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
  }
}
